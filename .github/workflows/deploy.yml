name: Deploy to Windows VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual deployment

env:
  VPS_HOST: "5.181.5.168"
  VPS_USER: "trader"
  DEPLOY_PATH: "C:/trade_copier"

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install sshpass and setup SSH
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ env.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Test SSH connection
      run: |
        sshpass -p '${{ secrets.VPS_PASSWORD }}' ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "echo 'SSH connection successful'"
        
    - name: Create deployment directory
      run: |
        sshpass -p '${{ secrets.VPS_PASSWORD }}' ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "if not exist ${{ env.DEPLOY_PATH }} mkdir ${{ env.DEPLOY_PATH }}"
        
    - name: Stop Python processes
      run: |
        sshpass -p '${{ secrets.VPS_PASSWORD }}' ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "
          echo Stopping all Python processes...
          taskkill /f /im python.exe 2>nul || echo No Python processes to kill
          taskkill /f /im pythonw.exe 2>nul || echo No Pythonw processes to kill
          timeout /t 3 /nobreak >nul
        "
        
    - name: Deploy all files
      run: |
        echo "Deploying all repository files..."
        sshpass -p '${{ secrets.VPS_PASSWORD }}' scp -o StrictHostKeyChecking=no -r ./* ${{ env.VPS_USER }}@${{ env.VPS_HOST }}:${{ env.DEPLOY_PATH }}/
        
    - name: Install dependencies and start server
      run: |
        sshpass -p '${{ secrets.VPS_PASSWORD }}' ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "
          cd ${{ env.DEPLOY_PATH }}
          echo Current directory: %CD%
          echo Checking Python installation...
          python --version || echo Python not found in PATH
          where python || echo Python executable not located
          echo.
          echo Checking main.py...
          if exist main.py (echo main.py found) else (echo main.py NOT found)
          echo.
          echo Installing Python dependencies...
          python -m pip install -r requirements.txt --upgrade 2>&1
          echo.
          echo Testing main.py syntax...
          python -m py_compile main.py || echo Syntax error in main.py
          echo.
          echo Starting server with full output...
          python main.py > server_output.log 2>&1 &
          echo Server start command executed
          timeout /t 5 /nobreak >nul
          echo.
          echo Checking if server is running...
          tasklist | findstr python.exe || echo No Python processes found
          echo.
          echo Server output log:
          type server_output.log 2>nul || echo No server output log found
        "
        
    - name: Verify deployment and debug server
      run: |
        echo "Checking deployment status and server health..."
        sshpass -p '${{ secrets.VPS_PASSWORD }}' ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "
          cd ${{ env.DEPLOY_PATH }}
          echo === DEPLOYMENT VERIFICATION ===
          echo Directory contents:
          dir /b
          echo.
          echo === PYTHON PROCESSES ===
          tasklist | findstr python.exe || echo No Python processes found
          echo.
          echo === SERVER OUTPUT LOG ===
          if exist server_output.log (
            echo Server output:
            type server_output.log
          ) else (
            echo No server output log found
          )
          echo.
          echo === MANUAL SERVER TEST ===
          echo Testing if we can run main.py manually...
          timeout 10 python main.py || echo Server failed to start or crashed
          echo === END VERIFICATION ===
        "
